---
# Source: nodejs-ex-k/templates/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: "nodejs-example"
  annotations:
    description: Exposes and load balances the application pods
spec:
  ports:
  - name: web
    port: 8080
    targetPort: 8080
  selector:
    name: "nodejs-example"
---
# Source: nodejs-ex-k/templates/buildconfig.yaml
kind: BuildConfig
apiVersion: build.openshift.io/v1
metadata:
  name: "nodejs-example"
  annotations:
    description: Defines how to build the application
spec:
  source:
    type: Git
    git:
      uri: "https://github.com/sclorg/nodejs-ex.git"
      ref: 
    contextDir: 
  strategy:
    type: Source
    sourceStrategy:
      from:
        kind: ImageStreamTag
        namespace: "openshift"
        name: nodejs:10
      env:
      - name: NPM_MIRROR
        value: 
  output:
    to:
      kind: ImageStreamTag
      name: nodejs-example:latest
  triggers:
  - type: ImageChange
  - type: ConfigChange
  - type: GitHub
    github:
      secret: "cS3AFvpd1DLz7C0VW5OVmJhTnXM0qwuOy4JFtulV"
  - type: Generic
    generic:
      secret: "gUE5VbKpAmDhz0dYMx5VkZUGK31jQxgE2uOfazNv"
  postCommit:
    script: npm test
---
# Source: nodejs-ex-k/templates/deployment.yaml
kind: DeploymentConfig
apiVersion: apps.openshift.io/v1
metadata:
  name: "nodejs-example"
  annotations:
    description: Defines how to deploy the application server
    template.alpha.openshift.io/wait-for-ready: 'true'
spec:
  strategy:
    type: Rolling
  triggers:
  - type: ImageChange
    imageChangeParams:
      automatic: true
      containerNames:
      - nodejs-example
      from:
        kind: ImageStreamTag
        name: "nodejs-example:latest"
  - type: ConfigChange
  replicas: 1
  selector:
    name: "nodejs-example"
  template:
    metadata:
      name: "nodejs-example"
      labels:
        name: "nodejs-example"
    spec:
      containers:
      - name: nodejs-example
        image: " "
        ports:
        - containerPort: 8080
        readinessProbe:
          timeoutSeconds: 3
          initialDelaySeconds: 3
          httpGet:
            path: "/"
            port: 8080
        livenessProbe:
          timeoutSeconds: 3
          initialDelaySeconds: 30
          httpGet:
            path: "/"
            port: 8080
        resources:
          limits:
            memory: "512Mi"
---
# Source: nodejs-ex-k/templates/imagestream.yaml
kind: ImageStream
apiVersion: image.openshift.io/v1
metadata:
  name: "nodejs-example"
spec:
  tags:
    - name: latest
      from:
        kind: DockerImage
        name: nodejs-ex
---
# Source: nodejs-ex-k/templates/route.yaml
kind: Route
apiVersion: route.openshift.io/v1
metadata:
  name: "nodejs-example"
spec:
  host: 
  to:
    kind: Service
    name: "nodejs-example"

